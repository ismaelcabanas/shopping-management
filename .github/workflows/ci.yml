name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Fast unit tests - core business logic validation
  frontend-unit-tests:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./frontend

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: TypeScript compilation check
      run: npm run build

    - name: ESLint code quality check
      run: npm run lint

    - name: Run unit tests (Domain, Application, Infrastructure)
      run: npm run test:ci:unit
      env:
        NODE_ENV: test
        FORCE_COLOR: 0

    - name: Generate test coverage report
      run: npm run test:coverage

    - name: Upload coverage reports to Codecov
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v4
      with:
        directory: ./frontend/coverage
        fail_ci_if_error: false
        verbose: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Build validation
      run: npm run build

  # Integration tests - UI and cross-boundary testing (future)
  frontend-integration-tests:
    runs-on: ubuntu-latest
    needs: frontend-unit-tests  # Only run if unit tests pass

    defaults:
      run:
        working-directory: ./frontend

    strategy:
      matrix:
        node-version: [20.x]  # Only run on latest Node.js for integration

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run integration tests (Presentation layer)
      run: npm run test:ci:integration
      env:
        NODE_ENV: test
        FORCE_COLOR: 0

  # Future: Backend CI job can be added here when backend is implemented
  # backend-ci:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./backend
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Setup Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.11'
  #     - name: Install dependencies
  #       run: pip install -r requirements.txt
  #     - name: Run tests
  #       run: pytest